

.game {
    display: none;
    width: 854px;
    height: 480px;
    margin-right: auto;
    margin-left: auto;
    padding: 20px;
}

.game.active {
    display: block;
}

.simple-menu {
    list-style: none;
    padding: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 30px;
    font-size: 40px;
    height: 100%;
    width: 100%;
}

.simple-menu__item {
    transition: 0.3s;
}

.simple-menu__item:hover {
    cursor: pointer;
    transform: scale(1.1);
    text-shadow: 0 0 5px goldenrod;
}

.battlefield {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    width: 470px;
    height: 470px;
    background-color: black;
    gap: 2px;
    margin: auto;
    padding: 2px;
    transform-origin: 50% 100%;
    transform: scale(1.5) perspective(500px) rotateX(45deg);
    transform-style: preserve-3d;
    z-index: 0;
}

.cell {
    width: 50px;
    height: 50px;
    background-color: darkgray;
    position: relative;
    /*z-index: 0;*/
    transform-style: preserve-3d;
    transition: box-shadow 0.3s;
}

.cell::after {
    transition: opacity 0.3s, transform 0.3s;
}


.cell.movement {
    box-shadow: inset 0 0 10px 2px cyan;
    border: 5px solid transparent;
}

.cell.movement:hover {
    cursor: pointer;
    box-shadow: inset 0 0 10px 2px deepskyblue;
}

.cell.targetable {
    z-index: 10;
}

.cell.targetable::after {
    content: "";
    position: absolute;
    --target-color: crimson;
    opacity: 0.6;
    width: calc(100% + 5px);
    height: calc(100% + 5px);
    left: -2.5px;
    top: -2.5px;
    background-color: var(--target-color);
    -webkit-mask: url("./assets/game/svg/target.svg") 50% 50%/contain no-repeat;
    mask: url("./assets/game/svg/target.svg") 50% 50%/contain no-repeat
}
.cell.targetable:hover::after {
    cursor: pointer;
    opacity: 1;
    transform: scale(1.5);
}

.pawn {
    width: 30px;
    height: 40px;
    position: absolute;
    bottom: 15px;
    left: 5px;
    background-color: lightgray;
    transform-origin: 50% 100%;
    transform-style: preserve-3d;
    transform: rotateX(-45deg);
    --current-hp: 100%;
    --current-mp: 0%;
    --divider: 1;
}

/* Displaying controlled pawn */
.pawn.active::before {
    position: absolute;
    content: "";
    top: -22px;
    left: calc(30px / 2 - 10px);
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 10px 10px 0 10px;
    border-color: red transparent transparent transparent;
}

/* Hp/mp display */
.pawn::after {
    position: absolute;
    top: -10px;
    left: calc(-20px + 15px);
    width: 40px;
    height: 6px;
    border: 1px solid black;
    content: "";
    background: linear-gradient(to right,
        red 0%,
        red calc(var(--current-hp) / var(--divider)),
        antiquewhite calc(var(--current-hp) / var(--divider)),
        antiquewhite 50%,
        cornflowerblue 50%,
        cornflowerblue calc(var(--current-mp) / var(--divider) + 50%),
        antiquewhite calc(var(--current-mp) / var(--divider) + 50%),
        antiquewhite 100%
    );
}

.pawn.targetable {

}

.cell:hover .pawn {
    bottom: 15px;
    left: 5px;
}

.pawn:hover {
    cursor: pointer;
    background-color: darkgreen;
}
/* Maybe styling on hover will get more difficult*/
.pawn.targetable:hover,
.cell.targetable:hover .pawn.targetable{
    filter: hue-rotate(90deg);
}